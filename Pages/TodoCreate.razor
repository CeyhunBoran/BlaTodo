@page "/todocreate"
@using Microsoft.AspNetCore.Identity
@using Todo.Models
@using Todo.Services

@inherits OwningComponentBase<TodoService>
@inject NavigationManager Navigate
@inject UserManager<TodoUser> UserManager

<div style="margin:0 auto;width:400px;">
    <div class="window" style="width: 400px">
    <div class="title-bar">
        <div class="title-bar-text">Create Todo Item</div>
        <div class="title-bar-controls">
            <button aria-label="Minimize"></button>
            <button aria-label="Maximize"></button>
            <button aria-label="Close"></button>
        </div>
    </div>
    <div class="window-body">
        <div>
            <div class="input">
                <label for="title">Title</label>
                <input class="title w-100" id="title" @bind="title" />
            </div>
            <div class="input">
                <label for="title">Category</label>
                <input class="category w-100" id="title" @bind="category" />
            </div>
            <div>
                <button style="margin-top:12px;" @onclick="CreateTodo">Add Item</button>
            </div>
        </div>
    </div>
</div>
</div>

@code {
    [Parameter]
    public string id { get; set; }
    private Guid _id { get { return Guid.Parse(id); } }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private List<TodoItem> todoItems = new List<TodoItem>();
    public TodoUser currentUser;
    private string title;
    private string category;

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationState).User;
        if(user.Identity.IsAuthenticated)
        {
            currentUser = await UserManager.GetUserAsync(user);
        }
    }

    public void CreateTodo()
    {
        if (!string.IsNullOrWhiteSpace(title))
        {
            var newToDoItem = new TodoItem()
                {
                    DateCreated = DateTime.Now,
                    Title = title,
                    Category = category,
                    Id = Guid.NewGuid(),
                    UserId = currentUser.Id

                };
            Service.Add(newToDoItem);

            title = string.Empty;
            NavigateToBack();
        }
    }
    public void NavigateToBack()
    {
        Navigate.NavigateTo("", true);
    }
    protected override void OnInitialized()
    {
        todoItems = Service.GetAll();
    }
}